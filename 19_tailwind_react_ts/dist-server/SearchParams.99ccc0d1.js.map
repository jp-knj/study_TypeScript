{"version":3,"sources":["../src/useBreedList.js","../src/Pet.js","../src/Results.js","../src/SearchParams.js"],"names":["localCache","useBreedList","animal","breedList","setBreedList","status","setStatus","requestBreedList","res","fetch","json","breeds","Pet","props","name","breed","images","location","id","hero","length","Results","pets","map","pet","city","state","SearchParams","ANIMALS","updateAnimal","updateLocation","updateBreed","setPets","theme","setTheme","ThemeContext","requestPets","e","preventDefault","target","value","backgroundColor"],"mappings":"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","file":"SearchParams.99ccc0d1.js","sourceRoot":"../server","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst localCache = {};\n\nexport default function useBreedList(animal) {\n  const [breedList, setBreedList] = useState([]);\n  const [status, setStatus] = useState(\"unloaded\");\n\n  useEffect(() => {\n    if (!animal) {\n      setBreedList([]);\n    } else if (localCache[animal]) {\n      setBreedList(localCache[animal]);\n    } else {\n      requestBreedList();\n    }\n\n    async function requestBreedList() {\n      setBreedList([]);\n      setStatus(\"loading\");\n      const res = await fetch(\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\n      );\n      const json = await res.json();\n      localCache[animal] = json.breeds || [];\n      setBreedList(localCache[animal]);\n      setStatus(\"loaded\");\n    }\n  }, [animal]);\n\n  return [breedList, status];\n}\n","import { Link } from \"react-router-dom\";\n\nconst Pet = (props) => {\n  const { name, animal, breed, images, location, id } = props;\n\n  let hero = \"http://pets-images.dev-apis.com/pets/none.jpg\";\n  if (images.length) {\n    hero = images[0];\n  }\n\n  return (\n    <Link to={`/details/${id}`} className=\"relative block\">\n      <div>\n        <img src={hero} alt={name} />\n      </div>\n      <div className=\"absolute bottom-0 left-0 bg-gradient-to-tr from-white to-transparent pr-2 pt-2\">\n        <h1>{name}</h1>\n        <h2>{`${animal} — ${breed} — ${location}`}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default Pet;\n","import Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n  return (\n    <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\n      [\n      {!pets.length ? (\n        <h1>No Pets Found</h1>\n      ) : (\n        pets.map((pet) => {\n          return (\n            <Pet\n              animal={pet.animal}\n              key={pet.id}\n              name={pet.name}\n              breed={pet.breed}\n              images={pet.images}\n              location={`${pet.city}, ${pet.state}`}\n              id={pet.id}\n            />\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import { useState, useEffect, useContext } from \"react\";\nimport ThemeContext from \"./ThemeContext\";\nimport useBreedList from \"./useBreedList\";\nimport Results from \"./Results\";\n\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\n\nconst SearchParams = () => {\n  const [animal, updateAnimal] = useState(\"\");\n  const [location, updateLocation] = useState(\"\");\n  const [breed, updateBreed] = useState(\"\");\n  const [pets, setPets] = useState([]);\n  const [breeds] = useBreedList(animal);\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  useEffect(() => {\n    requestPets();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  async function requestPets() {\n    const res = await fetch(\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\n    );\n    const json = await res.json();\n\n    setPets(json.pets);\n  }\n\n  return (\n    <div className=\"my-0 mx-auto w-11/12\">\n      <form\n        className=\"flex flex-col items-center justify-center p-10 mb-10 bg-gray-200 rounded-lg shadow-lg divide-y divide-gray-900\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          requestPets();\n        }}\n      >\n        <label className=\"search-label\" htmlFor=\"location\">\n          Location\n          <input\n            className=\"search-control\"\n            id=\"location\"\n            value={location}\n            placeholder=\"Location\"\n            onChange={(e) => updateLocation(e.target.value)}\n          />\n        </label>\n        <label className=\"search-label\" htmlFor=\"animal\">\n          Animal\n          <select\n            id=\"animal\"\n            className=\"search-control\"\n            value={animal}\n            onChange={(e) => updateAnimal(e.target.value)}\n            onBlur={(e) => updateAnimal(e.target.value)}\n          >\n            <option />\n            {ANIMALS.map((animal) => (\n              <option key={animal} value={animal}>\n                {animal}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label className=\"search-label\" htmlFor=\"breed\">\n          Breed\n          <select\n            className=\"search-control\"\n            disabled={!breeds.length}\n            id=\"breed\"\n            value={breed}\n            onChange={(e) => updateBreed(e.target.value)}\n            onBlur={(e) => updateBreed(e.target.value)}\n          >\n            <option />\n            {breeds.map((breed) => (\n              <option key={breed} value={breed}>\n                {breed}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label className=\"search-label\" htmlFor=\"theme\">\n          Theme\n          <select\n            className=\"search-control\"\n            value={theme}\n            onChange={(e) => setTheme(e.target.value)}\n            onBlur={(e) => setTheme(e.target.value)}\n          >\n            <option value=\"peru\">Peru</option>\n            <option value=\"darkblue\">Dark Blue</option>\n            <option value=\"chartreuse\">Chartreuse</option>\n            <option value=\"mediumorchid\">Medium Orchid</option>\n          </select>\n        </label>\n        <button\n          className=\"rounded px-6 py-2 color text-white hover:opacity-50 border-none\"\n          style={{ backgroundColor: theme }}\n        >\n          Submit\n        </button>\n      </form>\n      <Results pets={pets} />\n    </div>\n  );\n};\n\nexport default SearchParams;\n"]}